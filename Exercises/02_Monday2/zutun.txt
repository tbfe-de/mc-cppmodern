		Die etwas längere Übung für den Abschluss des Tages
		===================================================

Machen Sie aus den Dateien in diesem Verzeichnis ein C++-Projekt (falls Sie mit
ieiner IDE arbeiten wollen) und erzeugen Sie das Ziel "all" (in Eclipse Default
beim Klick auf das "Hammer"-Symbol, bzw. an der Kommandozeile in einem Terminal
einfach `make` eingeben).

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

1. Teil:

Klasse `my::length` in Datei `length.h`

Analysieren Sie den Code zum einen im Himblick darauf, was hier generell getan
wird, und zum anderen im Hinblick auf die verwendeten C++11 und C++14 Features. 

(Hinweis: Sie können diese Features "aufspüren" indem sie bei der Kompilerung
die Option `-std=` auf entsprechend ältere Sprachstandards setzen.)

Schauen Sie sich auch die Testfälle in `length_test.cpp` an.

Fügen Sie nun benutzerdefinierte Literat-Suffixe `_mm`, `_cm`, `_m` und `_km`
hinzu (welche sinnvollerweise intern die bisherigen `static`-Member-Funktionen
verwenden – ansonsten müssten sie `friend`s sein).

Passen Sie die Testfälle so an, dass diese die neuen Suffixe verwenden.

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

2. Teil:

Klasse `my::rectangular_coord` in `rectangular_coord.h` und zugehörige Testfälle
in `rectangular_coord_test.cpp`.
  
Analysieren Sie den Code zum einen im Himblick darauf, was hier generell getan
wird, und zum anderen im Hinblick auf die verwendeten C++11 und C++14 Features.

(Wenn Sie besonderen Fleiß beweisen wollen, können Sie auch den Code auf den
C++98 Standard "zurückdrehen", aber der Lerneffekt dabei dürfte eher gering
sein …)

= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

3. Teil:

Machen Sie aus der Klasse `my::rectangular_coord` eine Template, die den Datentyp
(bisher `value_type`) parametrisiert und testen Sie erneut mit unterschiedlichen
Datentypen.

Versuchen Sie nun auch die Klasse mit `my::length` als Instanziierungstyp zu
verwenden. Wenn das geht, dann OK, wenn nicht finden Sie den Grund dafür.

